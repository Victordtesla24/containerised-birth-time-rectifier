#!/bin/bash

# Default configuration for test runner

# Environment
ENV=${ENV:-"local"}

# API and WebSocket URLs
API_URL=${API_URL:-"http://localhost:9000/api/v1"}
WS_URL=${WS_URL:-"ws://localhost:9000/ws/v1"}

# Log file
LOG_FILE=${LOG_FILE:-"./test_run.log"}

# Verbose mode
VERBOSE=${VERBOSE:-"false"}

# Test timeout in seconds
TEST_TIMEOUT=${TEST_TIMEOUT:-60}

# API configuration
API_TIMEOUT=${API_TIMEOUT:-30}
API_MAX_RETRIES=${API_MAX_RETRIES:-3}

# WebSocket configuration
WS_RECONNECT_ATTEMPTS=${WS_RECONNECT_ATTEMPTS:-5}
WS_RECONNECT_DELAY=${WS_RECONNECT_DELAY:-2}

# Test configuration
TEST_OUTPUT_DIR=${TEST_OUTPUT_DIR:-"./test_output"}

# Dependencies
REQUIRED_DEPENDENCIES=("curl" "jq")
OPTIONAL_DEPENDENCIES=("websocat")

# Load environment-specific configuration if available
if [[ -f "$(dirname "$0")/${ENV}.conf" ]]; then
  source "$(dirname "$0")/${ENV}.conf"
fi

# Mock mode (for testing when actual API is not available)
MOCK_MODE=${MOCK_MODE:-false}

# Chart export configuration
CHART_EXPORT_DIR=${CHART_EXPORT_DIR:-"./chart_exports"}
DEFAULT_CHART_FORMAT=${DEFAULT_CHART_FORMAT:-"pdf"}

# Session configuration
SESSION_REFRESH_INTERVAL=${SESSION_REFRESH_INTERVAL:-60}  # In seconds

# Timeouts
CONNECTION_TIMEOUT=${CONNECTION_TIMEOUT:-10}
OPERATION_TIMEOUT=${OPERATION_TIMEOUT:-30}

# Feature flags
ENABLE_WEBSOCKET=${ENABLE_WEBSOCKET:-true}
ENABLE_CHART_EXPORT=${ENABLE_CHART_EXPORT:-true}
ENABLE_QUESTIONNAIRE=${ENABLE_QUESTIONNAIRE:-true}

# Validation settings
STRICT_VALIDATION=${STRICT_VALIDATION:-true}
VALIDATE_RESPONSES=${VALIDATE_RESPONSES:-true}

# Environment-specific configuration
# Automatically detect environment based on API_URL
if [[ "$API_URL" == *"localhost"* ]]; then
  ENVIRONMENT="local"
elif [[ "$API_URL" == *"dev"* ]]; then
  ENVIRONMENT="development"
elif [[ "$API_URL" == *"staging"* ]]; then
  ENVIRONMENT="staging"
elif [[ "$API_URL" == *"prod"* ]]; then
  ENVIRONMENT="production"
else
  ENVIRONMENT="unknown"
fi
