name: Birth Time Rectifier CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov mypy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install Node.js dependencies
      run: |
        npm ci

    - name: Run Python tests
      run: |
        pytest tests/ --cov=ai_service

    - name: Run Python type checking
      run: |
        mypy ai_service/

    - name: Run JavaScript tests
      run: |
        npm test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install Python linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install Node.js linting tools
      run: |
        npm install -g eslint prettier

    - name: Lint Python code
      run: |
        flake8 ai_service/
        black --check ai_service/
        isort --check-only --profile black ai_service/

    - name: Lint JavaScript code
      run: |
        eslint src/
        prettier --check "src/**/*.{js,jsx,ts,tsx}"

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and push backend
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        push: true
        tags: |
          birthtimerectifier/backend:latest
          birthtimerectifier/backend:${{ github.sha }}

    - name: Build and push frontend
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile.frontend
        push: true
        tags: |
          birthtimerectifier/frontend:latest
          birthtimerectifier/frontend:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
    - uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v1

    - name: Set Kubernetes context
      uses: azure/k8s-set-context@v1
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}

    - name: Deploy to Kubernetes
      run: |
        # Update deployment image
        kubectl set image deployment/birth-time-rectifier-backend backend=birthtimerectifier/backend:${{ github.sha }}
        kubectl set image deployment/birth-time-rectifier-frontend frontend=birthtimerectifier/frontend:${{ github.sha }}

        # Verify deployment
        kubectl rollout status deployment/birth-time-rectifier-backend
        kubectl rollout status deployment/birth-time-rectifier-frontend

    - name: Run post-deployment tests
      run: |
        # Allow some time for services to be fully available
        sleep 30

        # Get the API endpoint
        API_URL=$(kubectl get svc birth-time-rectifier-backend -o jsonpath='{.status.loadBalancer.ingress[0].ip}')

        # Run basic health check
        curl -f http://$API_URL/health
